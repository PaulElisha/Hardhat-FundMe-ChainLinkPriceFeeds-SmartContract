{
  "address": "0x05411dBFF5D232FEF5403134dB3dd5b7669Ee128",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "dataFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "NotOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "Funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "dataFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x19966fcb760e39caab35f4e010fc82723a5149871764299e370d4b1ddbfabed4",
  "receipt": {
    "to": null,
    "from": "0x5664eeeE3C63431eF1981f2bDBaB2690ee33f1e8",
    "contractAddress": "0x05411dBFF5D232FEF5403134dB3dd5b7669Ee128",
    "transactionIndex": 22,
    "gasUsed": "811679",
    "logsBloom": "0x
    "blockHash": "0x82756437c8de2d8db0f1239a1c9ca0f628b421bd4741d9203e07ed94801bdc8a",
    "transactionHash": "0x19966fcb760e39caab35f4e010fc82723a5149871764299e370d4b1ddbfabed4",
    "logs": [],
    "blockNumber": 4805610,
    "cumulativeGasUsed": "2000313",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x694AA1769357215DE4FAC081bf1f309aDC325306"
  ],
  "numDeployments": 1,
  "solcInputHash": "85efea33498f2f68233092e983a7f9fa",
  "metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"dataFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"NotOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"Funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dataFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(\\n    uint80 _roundId\\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n}\\n\",\"keccak256\":\"0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.22;\\n\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror NotOwner();\\n\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    uint256 public constant MINIMUM_USD = 50 * 1e18;\\n\\n    address[] public Funders;\\n\\n    mapping(address => uint256) public addressToAmountFunded;\\n\\n    address public immutable i_owner; \\n\\n    modifier onlyOwner {\\n       // require(msg.sender == i_owner, \\\"Caller is not the owner\\\");\\n\\n       if(msg.sender == i_owner) revert NotOwner();\\n        _;\\n    }\\n\\n    AggregatorV3Interface public dataFeed;\\n\\n    constructor(address dataFeedAddress) {\\n        i_owner = msg.sender;\\n        dataFeed = AggregatorV3Interface(dataFeedAddress);\\n    }\\n\\n    function fund() public payable {\\n        require(msg.value.getConversionRate(dataFeed) >= MINIMUM_USD, \\\"Didn't send enough ETH\\\");\\n        Funders.push(msg.sender);\\n        addressToAmountFunded[msg.sender] += msg.value;\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        for(uint256 funderIndex = 0; funderIndex > Funders.length; funderIndex = funderIndex + 1) {\\n            address funder = Funders[funderIndex];\\n            addressToAmountFunded[funder] = 0;\\n        }\\n        Funders = new address[](0);\\n        (bool success,) = payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\n        require(success, \\\"Call failed\\\");\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n  \\n}\",\"keccak256\":\"0x2c0fc4fb55f35f9be17859b7bdbfba21d56b314cc44c7359960b4c9512bce474\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.22;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter {\\n\\n\\n    // This variable can be declared and initialised out here or within the function call\\n    \\n    // AggregatorV3Interface dataFeed = AggregatorV3Interface(0x694AA1769357215DE4FAC081bf1f309aDC325306);\\n\\n    // dataFeed varible of contract type AggregatorV3Interface passed in as a parameter\\n    // so we can get the dataFeed of any token pair on any network dynamically\\n\\n    // Becasue a Library can't use a constructor\\n\\n    function getPrice(AggregatorV3Interface dataFeed) internal view returns(uint256){\\n       // AggregatorV3Interface dataFeed = AggregatorV3Interface(0x694AA1769357215DE4FAC081bf1f309aDC325306);\\n        (, int price,,,) = dataFeed.latestRoundData();\\n        return uint256(price * 1e10);\\n    }\\n\\n    function getConversionRate(uint256 ethAmount, AggregatorV3Interface dataFeed) internal view returns(uint256) {\\n        uint256 ethPrice = getPrice(dataFeed);\\n        uint256 ethUsd = (ethPrice * ethAmount) / 1e18;\\n        return ethUsd;\\n    }\\n\\n    function getVersion() internal view returns(uint256) {\\n        AggregatorV3Interface dataFeed = AggregatorV3Interface(0x694AA1769357215DE4FAC081bf1f309aDC325306);\\n        return dataFeed.version();\\n    }\\n\\n}\",\"keccak256\":\"0xe00039fb543076536fa18d14a597c24e2af115f5e92c21ced7754889ad0d0884\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b50604051610eaa380380610eaa83398181016040528101906100329190610110565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061013d565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100dd826100b2565b9050919050565b6100ed816100d2565b81146100f857600080fd5b50565b60008151905061010a816100e4565b92915050565b600060208284031215610126576101256100ad565b5b6000610134848285016100fb565b91505092915050565b608051610d4b61015f600039600081816102e101526105ac0152610d4b6000f3fe6080604052600436106100745760003560e01c80636b69a5921161004e5780636b69a592146101195780639e42ff9014610144578063b60d42881461016f578063dba6335f1461017957610083565b80633ccfd60b146100885780633e47d6f31461009f57806348e2f81b146100dc57610083565b36610083576100816101a4565b005b600080fd5b34801561009457600080fd5b5061009d6102df565b005b3480156100ab57600080fd5b506100c660048036038101906100c191906107a5565b610520565b6040516100d391906107eb565b60405180910390f35b3480156100e857600080fd5b5061010360048036038101906100fe9190610832565b610538565b604051610110919061086e565b60405180910390f35b34801561012557600080fd5b5061012e610577565b60405161013b91906107eb565b60405180910390f35b34801561015057600080fd5b50610159610584565b60405161016691906108e8565b60405180910390f35b6101776101a4565b005b34801561018557600080fd5b5061018e6105aa565b60405161019b919061086e565b60405180910390f35b6802b5e3af16b18800006101e3600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105ce90919063ffffffff16565b1015610224576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021b90610960565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102d691906109af565b92505081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1603610364576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b600080549050811115610410576000808281548110610389576103886109e3565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505060018161040991906109af565b9050610367565b50600067ffffffffffffffff81111561042c5761042b610a12565b5b60405190808252806020026020018201604052801561045a5781602001602082028036833780820191505090505b506000908051906020019061047092919061069b565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161049790610a72565b60006040518083038185875af1925050503d80600081146104d4576040519150601f19603f3d011682016040523d82523d6000602084013e6104d9565b606091505b505090508061051d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051490610ad3565b60405180910390fd5b50565b60016020528060005260406000206000915090505481565b6000818154811061054857600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6802b5e3af16b188000081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000806105da8361060a565b90506000670de0b6b3a764000085836105f39190610af3565b6105fd9190610b64565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610658573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061067c9190610c22565b5050509150506402540be400816106939190610c9d565b915050919050565b828054828255906000526020600020908101928215610714579160200282015b828111156107135782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106bb565b5b5090506107219190610725565b5090565b5b8082111561073e576000816000905550600101610726565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061077282610747565b9050919050565b61078281610767565b811461078d57600080fd5b50565b60008135905061079f81610779565b92915050565b6000602082840312156107bb576107ba610742565b5b60006107c984828501610790565b91505092915050565b6000819050919050565b6107e5816107d2565b82525050565b600060208201905061080060008301846107dc565b92915050565b61080f816107d2565b811461081a57600080fd5b50565b60008135905061082c81610806565b92915050565b60006020828403121561084857610847610742565b5b60006108568482850161081d565b91505092915050565b61086881610767565b82525050565b6000602082019050610883600083018461085f565b92915050565b6000819050919050565b60006108ae6108a96108a484610747565b610889565b610747565b9050919050565b60006108c082610893565b9050919050565b60006108d2826108b5565b9050919050565b6108e2816108c7565b82525050565b60006020820190506108fd60008301846108d9565b92915050565b600082825260208201905092915050565b7f4469646e27742073656e6420656e6f7567682045544800000000000000000000600082015250565b600061094a601683610903565b915061095582610914565b602082019050919050565b600060208201905081810360008301526109798161093d565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109ba826107d2565b91506109c5836107d2565b92508282019050808211156109dd576109dc610980565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610a5c600083610a41565b9150610a6782610a4c565b600082019050919050565b6000610a7d82610a4f565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610abd600b83610903565b9150610ac882610a87565b602082019050919050565b60006020820190508181036000830152610aec81610ab0565b9050919050565b6000610afe826107d2565b9150610b09836107d2565b9250828202610b17816107d2565b91508282048414831517610b2e57610b2d610980565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610b6f826107d2565b9150610b7a836107d2565b925082610b8a57610b89610b35565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610bb481610b95565b8114610bbf57600080fd5b50565b600081519050610bd181610bab565b92915050565b6000819050919050565b610bea81610bd7565b8114610bf557600080fd5b50565b600081519050610c0781610be1565b92915050565b600081519050610c1c81610806565b92915050565b600080600080600060a08688031215610c3e57610c3d610742565b5b6000610c4c88828901610bc2565b9550506020610c5d88828901610bf8565b9450506040610c6e88828901610c0d565b9350506060610c7f88828901610c0d565b9250506080610c9088828901610bc2565b9150509295509295909350565b6000610ca882610bd7565b9150610cb383610bd7565b9250828202610cc181610bd7565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610cf957610cf8610980565b5b8282058414831517610d0e57610d0d610980565b5b509291505056fea26469706673582212203a24b71cab9cf8d64d93ae8c831c1843ae065a9f3036ce15d7c1871348926c0464736f6c63430008160033",
  "deployedBytecode": "0x6080604052600436106100745760003560e01c80636b69a5921161004e5780636b69a592146101195780639e42ff9014610144578063b60d42881461016f578063dba6335f1461017957610083565b80633ccfd60b146100885780633e47d6f31461009f57806348e2f81b146100dc57610083565b36610083576100816101a4565b005b600080fd5b34801561009457600080fd5b5061009d6102df565b005b3480156100ab57600080fd5b506100c660048036038101906100c191906107a5565b610520565b6040516100d391906107eb565b60405180910390f35b3480156100e857600080fd5b5061010360048036038101906100fe9190610832565b610538565b604051610110919061086e565b60405180910390f35b34801561012557600080fd5b5061012e610577565b60405161013b91906107eb565b60405180910390f35b34801561015057600080fd5b50610159610584565b60405161016691906108e8565b60405180910390f35b6101776101a4565b005b34801561018557600080fd5b5061018e6105aa565b60405161019b919061086e565b60405180910390f35b6802b5e3af16b18800006101e3600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105ce90919063ffffffff16565b1015610224576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021b90610960565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102d691906109af565b92505081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1603610364576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b600080549050811115610410576000808281548110610389576103886109e3565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505060018161040991906109af565b9050610367565b50600067ffffffffffffffff81111561042c5761042b610a12565b5b60405190808252806020026020018201604052801561045a5781602001602082028036833780820191505090505b506000908051906020019061047092919061069b565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161049790610a72565b60006040518083038185875af1925050503d80600081146104d4576040519150601f19603f3d011682016040523d82523d6000602084013e6104d9565b606091505b505090508061051d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051490610ad3565b60405180910390fd5b50565b60016020528060005260406000206000915090505481565b6000818154811061054857600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6802b5e3af16b188000081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000806105da8361060a565b90506000670de0b6b3a764000085836105f39190610af3565b6105fd9190610b64565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610658573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061067c9190610c22565b5050509150506402540be400816106939190610c9d565b915050919050565b828054828255906000526020600020908101928215610714579160200282015b828111156107135782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106bb565b5b5090506107219190610725565b5090565b5b8082111561073e576000816000905550600101610726565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061077282610747565b9050919050565b61078281610767565b811461078d57600080fd5b50565b60008135905061079f81610779565b92915050565b6000602082840312156107bb576107ba610742565b5b60006107c984828501610790565b91505092915050565b6000819050919050565b6107e5816107d2565b82525050565b600060208201905061080060008301846107dc565b92915050565b61080f816107d2565b811461081a57600080fd5b50565b60008135905061082c81610806565b92915050565b60006020828403121561084857610847610742565b5b60006108568482850161081d565b91505092915050565b61086881610767565b82525050565b6000602082019050610883600083018461085f565b92915050565b6000819050919050565b60006108ae6108a96108a484610747565b610889565b610747565b9050919050565b60006108c082610893565b9050919050565b60006108d2826108b5565b9050919050565b6108e2816108c7565b82525050565b60006020820190506108fd60008301846108d9565b92915050565b600082825260208201905092915050565b7f4469646e27742073656e6420656e6f7567682045544800000000000000000000600082015250565b600061094a601683610903565b915061095582610914565b602082019050919050565b600060208201905081810360008301526109798161093d565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109ba826107d2565b91506109c5836107d2565b92508282019050808211156109dd576109dc610980565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610a5c600083610a41565b9150610a6782610a4c565b600082019050919050565b6000610a7d82610a4f565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610abd600b83610903565b9150610ac882610a87565b602082019050919050565b60006020820190508181036000830152610aec81610ab0565b9050919050565b6000610afe826107d2565b9150610b09836107d2565b9250828202610b17816107d2565b91508282048414831517610b2e57610b2d610980565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610b6f826107d2565b9150610b7a836107d2565b925082610b8a57610b89610b35565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610bb481610b95565b8114610bbf57600080fd5b50565b600081519050610bd181610bab565b92915050565b6000819050919050565b610bea81610bd7565b8114610bf557600080fd5b50565b600081519050610c0781610be1565b92915050565b600081519050610c1c81610806565b92915050565b600080600080600060a08688031215610c3e57610c3d610742565b5b6000610c4c88828901610bc2565b9550506020610c5d88828901610bf8565b9450506040610c6e88828901610c0d565b9350506060610c7f88828901610c0d565b9250506080610c9088828901610bc2565b9150509295509295909350565b6000610ca882610bd7565b9150610cb383610bd7565b9250828202610cc181610bd7565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610cf957610cf8610980565b5b8282058414831517610d0e57610d0d610980565b5b509291505056fea26469706673582212203a24b71cab9cf8d64d93ae8c831c1843ae065a9f3036ce15d7c1871348926c0464736f6c63430008160033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 61,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "Funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 65,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 82,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "dataFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}